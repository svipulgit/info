#/usr/bin/bash
#Add new file to perforce
find -type f -name "*" | xargs a4 filelog 2>&1 |  grep "not on client" | sed 's/ - file(s) not on client\.//' | xargs a4 add

#preserve the logs on standby supe we can symlink eos and messages in /var/log to /mnt/flash
# alternattely /mnt/flash/rc.Eos that sets up /var/log -> /mnt/flash/log 
/mnt/flash/logsym.sh:
#!/bin/sh
touch /mnt/flash/eos
touch /mnt/flash/messages
mv /var/log/eos /mnt/flash/eos.orig
mv /var/log/messages /mnt/flash/messages.orig
ln -s /mnt/flash/eos /var/log/eos
ln -s /mnt/flash/messages /var/log/messages

Config:
!
event-handler logsym
   trigger on-boot
   action bash /mnt/flash/logsym.sh
!

## command to find how many people have this process running
for i in `ps gauxwww | grep rtr | grep -v python | grep -v grep | awk '{ print $2 }'`; do   sudo strings /proc/$i/environ | grep SUDO_USER ; done | sort | uniq -c | sort -n

## Sum up particular column
show interfaces counters rates | nz | grep -v Name | awk '{sum = sum+$8} END {print sum}'

# If .so replaced on dut is for library might need to do 
sudo nohup ProcMgr restart
# in case your library is "fast-loaded", e.g. shows up in 
sudo pmap -x $(pidof netnsd-server)

# Setting agent heartbeat period to large before starting gdb
agent=Dot1x; sed -i 's/heartbeatPeriod = .*/heartbeatPeriod = 100000/' /etc/ProcMgr.d/run/ownedByLauncher/$agent
sudo kill -1 $(pidof ProcMgr-work)   ;# tell ProcMgr to re-read the agent configs
sleep 5; sudo gdb /usr/bin/netnsd $(pidof $agent)

# qtcat for all qt files
ls *.qt | xargs -I{} qtcat -a -t {} | grep "12:17:4[456789]" >> qlog

# Get file from parent
a4 print "//src/Bfd/$(a4 project setting | sed -n "s/parent='\(.*\)'/\1/p")/EchoSessionSm.tin@$(cat /eng/project/$(a4 project setting | sed -n 's@Current content of //eng/project/\(.*\)/settings:@\1@p')/syncpoint)" > /tmp/head

=========== top sort by memory =========
From man top

SORTING of task window
  For compatibility, this top supports most of the former top sort keys.
  Since this is primarily a service to former top users, these commands do
  not appear on any help screen.
    command   sorted-field                  supported
      A         start time (non-display)      No
      M         %MEM                          Yes
      N         PID                           Yes
      P         %CPU                          Yes
      T         TIME+                         Yes

======== a4 make ======
--genDeps no --no-use-resourced
=========== Running multiple commands in for loop =========
bash for igpgw in `FastCli -c $'en\nshow ip bgp 0.0.0.0/0 | grep from | tr -s \' \' | cut -d \' \' -f 2'`; do FastCli -c $'en\nshow ip route '$igpgw"| grep via"; done

======== COW ======
You can use this simple script to print out the COW'd sizes over time:
while sleep 1; do
   if [ -n "$(pidof -o $1 $2)" ]; then
      COW="$(sudo cat /proc/$(pidof -o $1 $2)/smaps | grep Private_Dirty | cut -d 'k' -f1 | awk '{s+=$2} END {print s}')"
      HP="$(sudo cat /proc/$(pidof -o $1 $2)/maps | grep "\[heap\]" | cut -d ' ' -f1 | paste -sd "," -)"
      echo $COW $HP
   fi
done
===============
# print patternrules that run a stest removed from a Makefile in this mut
a4 project diff -p venkit.eos64.0 | grep '^-.*_STESTS += ' | awk '{print $3}' | sed -e 's@stest/@ArBgp/@' -e 's@\.py$@@' | xargs -n 1 a tpgen patternrule list -s
===============
# Fresh compilation of module
rm libBgpEvpnPlugin_la-EvpnPlugin.lo
rm .libs/libBgpEvpnPlugin_la-EvpnPlugin.lo
export CCACHE_DISABLE=1
artime make libBgpEvpnPlugin_la-EvpnPlugin.lo
===============
Acons dump
from FormatHelperTestMixin import FormatHelperTestMixin as Fmt
$ print routeKeyDedupTable.dumpState( Fmt.tacDumpContext( level=0 ), 0 )
===============
Run test multiple times and redirect pdb output to terminal:
import pdb
f1 = open( '/dev/pts/46', 'r')
f2 = open( '/dev/pts/46', 'w' )
mypdb =  pdb.Pdb( stdin=f1, stdout=f2 )
mypdb.set_trace()

#!/usr/bin/env bash
for i in `seq 10`; do
   MyBanner $i
   MyBanner $i > /src/attempt.txt
   TRACE="pexpect/0-2"  /src/ArBgpTest/stest/ArBgpEcmpMultipleIntfToggleStateTest.py > testoutput.txt 2>&1
   if [ $? -ne 0 ]; then
      exit 42
   fi
done
===============
===============
